package model

// Turnover ...
type Turnover struct {
	Model `xorm:"extends" json:",inline"`
	//TODO
	//TransactionID string `xorm:"notnull default('') comment(微信订单号)" xml:"transaction_id"`
	//DeviceInfo    string `xorm:"comment(设备号)" xml:"device_info"`
	//ErrCode       string `xorm:"comment(错误代码)" xml:"err_code"`
	//ErrCodeDes    string `xorm:"comment(错误代码描述)" xml:"err_code_des"`
	//CashFeeType   string `xorm:"notnull default('') comment(现金支付货币类型)" xml:"cash_fee_type"`
	//CouponFee     int    `xorm:"comment(代金券金额)" xml:"coupon_fee"`
	//CouponCount   int    `xorm:"comment(代金券使用数量)" xml:"coupon_count"`
	//Attach        string `xorm:"comment(商家数据包)" xml:"attach"`
	//BankType      string `xorm:"notnull default('') comment(付款银行)" xml:"bank_type"`
	//CashFee       string `xorm:"notnull default('') comment(现金支付金额)" xml:"cash_fee"`
	//FeeType       string `xorm:"notnull default('') comment(货币种类)" xml:"fee_type"`
	//IsSubscribe   string `xorm:"notnull default('') comment(是否关注公众账号)" xml:"is_subscribe"`
	//TimeEnd       string `xorm:"notnull default('') comment(支付完成时间)" xml:"time_end"`
	//CodeURL       string `xorm:"comment(二维码链接)" xml:"code_url"`
	//NonceStr      string `xorm:"comment(随机字符串)" xml:"nonce_str"`
	//PrepayID      string `xorm:"comment(预支付交易会话标识)" xml:"prepay_id"`
	//ResultCode    string `xorm:"comment(业务结果)" xml:"result_code"`
	//ReturnCode    string `xorm:"comment(返回状态码)" xml:"return_code"`
	//ReturnMsg     string `xorm:"comment(返回信息)"  xml:"return_msg"`
	//Sign          string `xorm:"comment(签名)"  xml:"sign"`
	//TradeType     string `xorm:"notnull default('') comment(交易类型)" xml:"trade_type"`
}

// ChargeRequestInfo ...
type ChargeRequestInfo struct {
	Model `xorm:"extends" json:",inline"`
	//TODO:
	//TransactionID string `xorm:"notnull default('') comment(微信订单号)" xml:"transaction_id"`
	//DeviceInfo    string `xorm:"comment(设备号)" xml:"device_info"`
	//ErrCode     string `xorm:"comment(错误代码)" xml:"err_code"`
	//ErrCodeDes  string `xorm:"comment(错误代码描述)" xml:"err_code_des"`
	//CashFeeType string `xorm:"notnull default('') comment(现金支付货币类型)" xml:"cash_fee_type"`
	//CouponFee    int    `xorm:"comment(代金券金额)" xml:"coupon_fee"`
	//CouponCount  int    `xorm:"comment(代金券使用数量)" xml:"coupon_count"`
	//Attach       string `xorm:"comment(商家数据包)" xml:"attach"`
	//BankType    string `xorm:"notnull default('') comment(付款银行)" xml:"bank_type"`
	//CashFee     string `xorm:"notnull default('') comment(现金支付金额)" xml:"cash_fee"`
	//FeeType     string `xorm:"notnull default('') comment(货币种类)" xml:"fee_type"`
	//IsSubscribe string `xorm:"notnull default('') comment(是否关注公众账号)" xml:"is_subscribe"`
	//TimeEnd     string `xorm:"notnull default('') comment(支付完成时间)" xml:"time_end"`
	//CodeUrl     string `xorm:"comment(二维码链接)" xml:"code_url"`
	//NonceStr    string `xorm:"comment(随机字符串)" xml:"nonce_str"`
	//PrepayID    string `xorm:"comment(预支付交易会话标识)" xml:"prepay_id"`
	//ResultCode  string `xorm:"comment(业务结果)" xml:"result_code"`
	//ReturnCode  string `xorm:"comment(返回状态码)" xml:"return_code"`
	//ReturnMsg   string `xorm:"comment(返回信息)"  xml:"return_msg"`
	//Sign        string `xorm:"comment(签名)"  xml:"sign"`
	//TradeType string `xorm:"notnull default('') comment(交易类型)" xml:"trade_type"`
}

// ChargeInfo ...
type ChargeInfo struct {
	WechatUserID string `xorm:"notnull default('') comment(用户ID)" xml:"-"`
	PayStatus    string `xorm:"notnull default('') comment(支付状态)"`
	OutTradeNo   string `xorm:"notnull default('') comment(商户订单号)" xml:"out_trade_no"`
	OpenID       string `xorm:"notnull default('') comment(用户ID)" xml:"openid"`
	PrepayID     string `xorm:"notnull default('') comment(预支付ID)" xml:"prepay_id"`
	TotalFee     int    `xorm:"notnull default(0) comment(总金额)" xml:"total_fee"`
	FavourFee    int    `xorm:"notnull default(0) comment(活动金额)" xml:"favour_fee"`
}

// AutoGenerated ...
type req struct {
	Appid      string `xml:"appid"`
	MchID      int    `xml:"mch_id"`
	NonceStr   string `xml:"nonce_str"`
	PrepayID   string `xml:"prepay_id"`
	ResultCode string `xml:"result_code"`
	ReturnCode string `xml:"return_code"`
	ReturnMsg  string `xml:"return_msg"`
	Sign       string `xml:"sign"`
	TradeType  string `xml:"trade_type"`
}

type res struct {
	AppID         string `xml:"appid"`
	BankType      string `xml:"bank_type"`
	CashFee       int    `xml:"cash_fee"`
	FeeType       string `xml:"fee_type"`
	IsSubscribe   string `xml:"is_subscribe"`
	MchID         int    `xml:"mch_id"`
	NonceStr      string `xml:"nonce_str"`
	OpenID        string `xml:"openid"`
	OutTradeNo    int64  `xml:"out_trade_no"`
	ResultCode    string `xml:"result_code"`
	ReturnCode    string `xml:"return_code"`
	Sign          string `xml:"sign"`
	TimeEnd       int64  `xml:"time_end"`
	TotalFee      int    `xml:"total_fee"`
	TradeType     string `xml:"trade_type"`
	TransactionID int64  `xml:"transaction_id"`
}

// Charge ...
type Charge struct {
	Model       `xorm:"extends"`
	*ChargeInfo `xorm:"extends"`
	//*ChargeResponseInfo `xorm:"extends"`
	RequestInfo  map[string]interface{} `xorm:"comment(请求详情) json" xml:"-"`
	ResponseInfo map[string]interface{} `xorm:"comment(应答详情) json" xml:"-"`
}
